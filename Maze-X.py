# Built By thenxtgenboy
# Put Server/Database/Collection Credentials At Line - 687,688,689

from requests import get
from os import path
from PyQt5 import QtWidgets, QtGui, QtCore
from pymongo import MongoClient as MC
from random import randint

class Maze(QtWidgets.QMainWindow):
    current_id = ""
    current_sec = ""
    def __init__(self):
        super().__init__()
        va = self.resource_path("varela.ttf")
        qa = self.resource_path("Quadron.otf")
        QtGui.QFontDatabase.addApplicationFont(va)
        QtGui.QFontDatabase.addApplicationFont(qa)
        icon = self.resource_path("icon.png")
        self.setWindowIcon(QtGui.QIcon(icon))
        self.setFixedSize(592, 416) 
        self.setWindowFlags(QtCore.Qt.FramelessWindowHint)
        self.setAttribute(QtCore.Qt.WA_TranslucentBackground)
        self.label = QtWidgets.QLabel(self)
        self.label.setGeometry(QtCore.QRect(10, 10, 571, 396))
        self.label.setStyleSheet("background-color: rgb(240, 235, 204);border-radius:12px;")
        self.label.setText("")
        self.label.setObjectName("label")
        self.R_welcome = QtWidgets.QLabel(self)
        self.R_welcome.setGeometry(QtCore.QRect(40, 110, 271, 71))
        font = QtGui.QFont()
        font.setFamily("QUADRON")
        font.setPointSize(40)
        font.setBold(False)
        font.setWeight(50)
        self.R_welcome.setFont(font)
        self.R_welcome.setStyleSheet("color: rgb(139, 139, 139);letter-spacing:1px;")
        self.R_welcome.setTextFormat(QtCore.Qt.AutoText)
        self.R_welcome.setScaledContents(False)
        self.R_welcome.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing)
        self.R_welcome.setWordWrap(False)
        self.R_welcome.setObjectName("R_welcome")
        self.R_to = QtWidgets.QLabel(self)
        self.R_to.setGeometry(QtCore.QRect(40, 170, 271, 71))
        font = QtGui.QFont()
        font.setFamily("QUADRON")
        font.setPointSize(40)
        font.setBold(False)
        font.setWeight(50)
        self.R_to.setFont(font)
        self.R_to.setStyleSheet("color: rgb(139, 139, 139);letter-spacing:1px;")
        self.R_to.setTextFormat(QtCore.Qt.AutoText)
        self.R_to.setScaledContents(False)
        self.R_to.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing)
        self.R_to.setWordWrap(False)
        self.R_to.setObjectName("R_to")
        self.R_maze = QtWidgets.QLabel(self)
        self.R_maze.setGeometry(QtCore.QRect(40, 230, 271, 71))
        font = QtGui.QFont()
        font.setFamily("QUADRON")
        font.setPointSize(40)
        font.setBold(False)
        font.setWeight(50)
        self.R_maze.setFont(font)
        self.R_maze.setStyleSheet("color: rgb(139, 139, 139);letter-spacing:1px;")
        self.R_maze.setTextFormat(QtCore.Qt.AutoText)
        self.R_maze.setScaledContents(False)
        self.R_maze.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing)
        self.R_maze.setWordWrap(False)
        self.R_maze.setObjectName("R_maze")
        self.pushButton = QtWidgets.QPushButton(self)
        self.pushButton.setGeometry(QtCore.QRect(24, 20, 11, 11))
        self.pushButton.setStyleSheet("QPushButton{background-color: rgb(255, 154, 154);border-radius:5px;}QPushButton:hover{background-color: rgb(255, 0, 0);}")
        self.pushButton.setText("")
        self.pushButton.setObjectName("pushButton")
        self.pushButton.clicked.connect(self.closed)
        self.pushButton_2 = QtWidgets.QPushButton(self)
        self.pushButton_2.setGeometry(QtCore.QRect(44, 20, 11, 11))
        self.pushButton_2.setStyleSheet("background-color: rgb(183, 183, 183);border-radius:5px;")
        self.pushButton_2.setText("")
        self.pushButton_2.setObjectName("pushButton_2")
        self.pushButton_2.clicked.connect(self.min)
        self.R_register = QtWidgets.QLabel(self)
        self.R_register.setGeometry(QtCore.QRect(384, 80, 121, 31))
        font = QtGui.QFont()
        font.setFamily("QUADRON")
        font.setPointSize(18)
        font.setBold(False)
        font.setWeight(50)
        self.R_register.setFont(font)
        self.R_register.setStyleSheet("color: rgb(139, 139, 139);letter-spacing:1px;")
        self.R_register.setTextFormat(QtCore.Qt.AutoText)
        self.R_register.setScaledContents(False)
        self.R_register.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing)
        self.R_register.setWordWrap(False)
        self.R_register.setObjectName("R_register")
        self.R_username = QtWidgets.QLineEdit(self)
        self.R_username.setGeometry(QtCore.QRect(340, 140, 211, 51))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(12)
        self.R_username.setFont(font)
        self.R_username.setStyleSheet("border-radius:25px;color: rgb(139, 139, 139);letter-spacing:2px;")
        self.R_username.setText("")
        self.R_username.setMaxLength(40)
        self.R_username.setAlignment(QtCore.Qt.AlignCenter)
        self.R_username.setObjectName("R_username")
        self.R_password = QtWidgets.QLineEdit(self)
        self.R_password.setGeometry(QtCore.QRect(340, 210, 211, 51))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(12)
        self.R_password.setFont(font)
        self.R_password.setStyleSheet("border-radius:25px;color: rgb(139, 139, 139);letter-spacing:2px;")
        self.R_password.setInputMethodHints(QtCore.Qt.ImhHiddenText|QtCore.Qt.ImhNoAutoUppercase|QtCore.Qt.ImhNoPredictiveText|QtCore.Qt.ImhSensitiveData)
        self.R_password.setInputMask("")
        self.R_password.setText("")
        self.R_password.setMaxLength(40)
        self.R_password.setEchoMode(QtWidgets.QLineEdit.Password)
        self.R_password.setAlignment(QtCore.Qt.AlignCenter)
        self.R_password.setClearButtonEnabled(False)
        self.R_password.setObjectName("R_password")
        self.R_create = QtWidgets.QPushButton(self)
        self.R_create.setGeometry(QtCore.QRect(387, 300, 111, 41))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(14)
        self.R_create.setFont(font)
        self.R_create.clicked.connect(self.create_)
        self.R_create.setStyleSheet("QPushButton{background-color: rgb(23, 215, 160);border-radius:20px;    color: rgb(255, 255, 255);}QPushButton:hover{    background-color: rgb(255, 255, 255);    color: rgb(23, 215, 160);}")
        self.R_create.setObjectName("R_create")
        # self.R_create.clicked.connect(self.R_cl)
        self.R_warning = QtWidgets.QLabel(self)
        self.R_warning.setGeometry(QtCore.QRect(346, 270, 201, 21))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(12)
        self.R_warning.setFont(font)
        self.R_warning.setStyleSheet("color: rgb(139, 139, 139);letter-spacing:1px;")
        self.R_warning.setText("")
        self.R_warning.setAlignment(QtCore.Qt.AlignCenter)
        self.R_warning.setObjectName("R_warning")
        self.R_warning1 = QtWidgets.QLabel(self)
        self.R_warning1.setGeometry(QtCore.QRect(10, 370, 571, 21))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(12)
        self.R_warning1.setFont(font)
        self.R_warning1.setStyleSheet("color: rgb(139, 139, 139);letter-spacing:1px;")
        self.R_warning1.setText("")
        self.R_warning1.setAlignment(QtCore.Qt.AlignCenter)
        self.R_warning1.setObjectName("R_warning1")
        self.R_warning1.setText("Leave it blank and click next for login")
        self.R_welcome.setText("<html><head/><body><p align='right'>welcome</p></body></html>")
        self.R_to.setText("<html><head/><body><p align='right'>To</p></body></html>")
        self.R_maze.setText("<html><head/><body><p align='right'>Maze-x</p></body></html>")
        self.R_register.setText("<html><head/><body><p align='right'>Register</p></body></html>")
        self.R_username.setPlaceholderText("Username")
        self.R_password.setPlaceholderText("Password")
        self.R_create.setText("Next")
        self.L_welcome = QtWidgets.QLabel(self)
        self.L_welcome.setGeometry(QtCore.QRect(10, 60, 571, 71))
        font = QtGui.QFont()
        font.setFamily("QUADRON")
        font.setPointSize(40)
        font.setBold(False)
        font.setWeight(50)
        self.L_welcome.setFont(font)
        self.L_welcome.setStyleSheet("color: rgb(139, 139, 139);letter-spacing:1px;")
        self.L_welcome.setTextFormat(QtCore.Qt.AutoText)
        self.L_welcome.setScaledContents(False)
        self.L_welcome.setAlignment(QtCore.Qt.AlignBottom|QtCore.Qt.AlignHCenter)
        self.L_welcome.setWordWrap(False)
        self.L_welcome.setObjectName("L_welcome")
        self.L_username = QtWidgets.QLineEdit(self)
        self.L_username.setGeometry(QtCore.QRect(165, 160, 261, 51))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(12)
        self.L_username.setFont(font)
        self.L_username.setStyleSheet("border-radius:25px;color: rgb(139, 139, 139);letter-spacing:2px;")
        self.L_username.setInputMethodHints(QtCore.Qt.ImhNone)
        self.L_username.setInputMask("")
        self.L_username.setText("")
        self.L_username.setMaxLength(40)
        self.L_username.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.L_username.setAlignment(QtCore.Qt.AlignCenter)
        self.L_username.setClearButtonEnabled(False)
        self.L_username.setObjectName("L_username")
        self.L_warning = QtWidgets.QLabel(self)
        self.L_warning.setGeometry(QtCore.QRect(10, 290, 571, 21))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(12)
        self.L_warning.setFont(font)
        self.L_warning.setStyleSheet("color: rgb(139, 139, 139);letter-spacing:1px;")
        self.L_warning.setText("")
        self.L_warning.setAlignment(QtCore.Qt.AlignCenter)
        self.L_warning.setObjectName("L_warning")
        self.L_password = QtWidgets.QLineEdit(self)
        self.L_password.setGeometry(QtCore.QRect(165, 230, 261, 51))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(12)
        self.L_password.setFont(font)
        self.L_password.setStyleSheet("border-radius:25px;color: rgb(139, 139, 139);letter-spacing:2px;")
        self.L_password.setInputMethodHints(QtCore.Qt.ImhHiddenText|QtCore.Qt.ImhNoAutoUppercase|QtCore.Qt.ImhNoPredictiveText|QtCore.Qt.ImhSensitiveData)
        self.L_password.setInputMask("")
        self.L_password.setText("")
        self.L_password.setMaxLength(40)
        self.L_password.setEchoMode(QtWidgets.QLineEdit.Password)
        self.L_password.setAlignment(QtCore.Qt.AlignCenter)
        self.L_password.setClearButtonEnabled(False)
        self.L_password.setObjectName("L_password")
        self.L_enter = QtWidgets.QPushButton(self)
        self.L_enter.setGeometry(QtCore.QRect(226, 320, 141, 51))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(15)
        font.setBold(False)
        font.setWeight(50)
        self.L_enter.setFont(font)
        self.L_enter.setStyleSheet("QPushButton{    background-color: rgb(23, 215, 160);    color: rgb(255, 255, 255);    border-radius:25px;    letter-spacing:3px;}QPushButton:hover{    background-color: rgb(255, 255, 255);    color: rgb(23, 215, 160);}")
        self.L_enter.setObjectName("L_enter")
        self.L_enter.clicked.connect(self.enter_)
        self.L_welcome.setText("welcome back")
        self.L_username.setPlaceholderText("Username")
        self.L_password.setPlaceholderText("Password")
        self.L_enter.setText("Enter")
        self.add_secret = QtWidgets.QLineEdit(self)
        self.add_secret.setGeometry(QtCore.QRect(262, 90, 261, 51))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(12)
        self.add_secret.setFont(font)
        self.add_secret.setStyleSheet("border-radius:25px;color: rgb(139, 139, 139);letter-spacing:2px;")
        self.add_secret.setInputMethodHints(QtCore.Qt.ImhNone)
        self.add_secret.setInputMask("")
        self.add_secret.setText("")
        self.add_secret.setMaxLength(40)
        self.add_secret.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.add_secret.setAlignment(QtCore.Qt.AlignCenter)
        self.add_secret.setClearButtonEnabled(False)
        self.add_secret.setObjectName("add_secret")
        self.add_username = QtWidgets.QLineEdit(self)
        self.add_username.setGeometry(QtCore.QRect(260, 160, 261, 51))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(12)
        self.add_username.setFont(font)
        self.add_username.setStyleSheet("border-radius:25px;color: rgb(139, 139, 139);letter-spacing:2px;")
        self.add_username.setInputMethodHints(QtCore.Qt.ImhNone)
        self.add_username.setInputMask("")
        self.add_username.setText("")
        self.add_username.setMaxLength(40)
        self.add_username.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.add_username.setAlignment(QtCore.Qt.AlignCenter)
        self.add_username.setClearButtonEnabled(False)
        self.add_username.setObjectName("add_username")
        self.L_warning = QtWidgets.QLabel(self)
        self.L_warning.setGeometry(QtCore.QRect(10, 290, 571, 21))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(12)
        self.L_warning.setFont(font)
        self.L_warning.setStyleSheet("color: rgb(139, 139, 139);letter-spacing:1px;")
        self.L_warning.setText("")
        self.L_warning.setAlignment(QtCore.Qt.AlignCenter)
        self.L_warning.setObjectName("L_warning")
        self.add_password = QtWidgets.QLineEdit(self)
        self.add_password.setGeometry(QtCore.QRect(262, 230, 261, 51))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(12)
        self.add_password.setFont(font)
        self.add_password.setStyleSheet("border-radius:25px;color: rgb(139, 139, 139);letter-spacing:2px;")
        self.add_password.setInputMethodHints(QtCore.Qt.ImhHiddenText|QtCore.Qt.ImhNoAutoUppercase|QtCore.Qt.ImhNoPredictiveText|QtCore.Qt.ImhSensitiveData)
        self.add_password.setInputMask("")
        self.add_password.setText("")
        self.add_password.setMaxLength(40)
        self.add_password.setEchoMode(QtWidgets.QLineEdit.Password)
        self.add_password.setAlignment(QtCore.Qt.AlignCenter)
        self.add_password.setClearButtonEnabled(False)
        self.add_password.setObjectName("add_password")
        self.logout_btn = QtWidgets.QPushButton(self)
        self.logout_btn.setGeometry(QtCore.QRect(53, 340, 111, 41))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.logout_btn.setFont(font)
        self.logout_btn.setStyleSheet("QPushButton{    background-color: rgb(23, 215, 160);    color: rgb(255, 255, 255);    border-radius:20px;}QPushButton:hover{    background-color: rgb(255, 255, 255);    color: rgb(23, 215, 160);}")
        self.logout_btn.setObjectName("logout_btn")
        self.logout_btn.clicked.connect(self.logout_)
        self.line = QtWidgets.QFrame(self)
        self.line.setGeometry(QtCore.QRect(203, 10, 3, 397))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(15)
        self.line.setFont(font)
        self.line.setStyleSheet("color: rgb(139, 139, 139);")
        self.line.setFrameShadow(QtWidgets.QFrame.Plain)
        self.line.setLineWidth(0)
        self.line.setFrameShape(QtWidgets.QFrame.VLine)
        self.line.setObjectName("line")
        self.add_btn = QtWidgets.QPushButton(self)
        self.add_btn.setGeometry(QtCore.QRect(10, 130, 194, 51))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(14)
        self.add_btn.setFont(font)
        self.add_btn.setStyleSheet("QPushButton{    background-color: rgb(23, 215, 160);    color: rgb(255, 255, 255);    border-radius:0px;}")
        self.add_btn.setObjectName("add_btn")
        self.view_btn = QtWidgets.QPushButton(self)
        self.view_btn.setGeometry(QtCore.QRect(10, 181, 194, 51))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(14)
        self.view_btn.setFont(font)
        self.view_btn.setStyleSheet("QPushButton{    color:rgb(139, 139, 139);    border-radius:0px;}")
        self.view_btn.setObjectName("view_btn")
        self.about_btn = QtWidgets.QPushButton(self)
        self.about_btn.setGeometry(QtCore.QRect(10, 232, 194, 51))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(14)
        self.about_btn.setFont(font)
        self.about_btn.setStyleSheet("QPushButton{    color:rgb(139, 139, 139);    border-radius:0px;}")
        self.about_btn.setObjectName("about_btn")
        self.user_lb = QtWidgets.QLabel(self)
        self.user_lb.setGeometry(QtCore.QRect(10, 50, 191, 61))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(14)
        self.user_lb.setFont(font)
        self.user_lb.setStyleSheet("color: rgb(139, 139, 139);")
        self.user_lb.setAlignment(QtCore.Qt.AlignCenter)
        self.user_lb.setObjectName("user_lb")
        self.title = QtWidgets.QLabel(self)
        self.title.setGeometry(QtCore.QRect(200, 10, 381, 71))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(14)
        self.title.setFont(font)
        self.title.setStyleSheet("color: rgb(139, 139, 139);")
        self.title.setAlignment(QtCore.Qt.AlignCenter)
        self.title.setObjectName("title")
        self.add_save = QtWidgets.QPushButton(self)
        self.add_save.setGeometry(QtCore.QRect(330, 320, 131, 51))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.add_save.setFont(font)
        self.add_save.setStyleSheet("QPushButton{    background-color: rgb(23, 215, 160);    color: rgb(255, 255, 255);    border-radius:20px;}QPushButton:hover{    background-color: rgb(255, 255, 255);    color: rgb(23, 215, 160);}")
        self.add_save.setObjectName("add_save")
        self.add_save.clicked.connect(self.save_)
        self.add_note = QtWidgets.QLabel(self)
        self.add_note.setGeometry(QtCore.QRect(200, 380, 381, 21))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(9)
        self.add_note.setFont(font)
        self.add_note.setStyleSheet("color: rgb(139, 139, 139);")
        self.add_note.setAlignment(QtCore.Qt.AlignCenter)
        self.add_note.setObjectName("add_note")
        self.add_warning = QtWidgets.QLabel(self)
        self.add_warning.setGeometry(QtCore.QRect(200, 290, 381, 21))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(10)
        self.add_warning.setFont(font)
        self.add_warning.setStyleSheet("color: rgb(139, 139, 139);")
        self.add_warning.setAlignment(QtCore.Qt.AlignCenter)
        self.add_warning.setObjectName("add_warning")
        self.add_secret.setPlaceholderText("Secret")
        self.add_password.setPlaceholderText("Password")
        self.logout_btn.setText("Logout")
        self.add_btn.setText("Add Record")
        self.add_btn.clicked.connect(self.add_cl)
        self.view_btn.clicked.connect(self.view_cl)
        self.about_btn.clicked.connect(self.about_cl)
        self.view_btn.setText("View Record")
        self.about_btn.setText("About")
        self.user_lb.setText("0000000000")
        self.title.setText("Add Record")
        # self.title.setText("Add In database")
        self.add_save.setText("Save")
        self.add_note.setText("Note - Records can be only accessed with secret")
        # self.add_warning.setText("Note - Records can be only accessed with secret")
        self.add_username.setPlaceholderText("Username/Email")
        self.view_username_txt = QtWidgets.QLineEdit(self)
        self.view_username_txt.setGeometry(QtCore.QRect(270, 190, 261, 51))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(12)
        self.view_username_txt.setFont(font)
        self.view_username_txt.setStyleSheet("border-radius:25px;color: rgb(139, 139, 139);letter-spacing:2px;")
        self.view_username_txt.setInputMethodHints(QtCore.Qt.ImhNone)
        self.view_username_txt.setInputMask("")
        self.view_username_txt.setText("")
        self.view_username_txt.setMaxLength(40)
        self.view_username_txt.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.view_username_txt.setAlignment(QtCore.Qt.AlignCenter)
        self.view_username_txt.setReadOnly(True)
        self.view_username_txt.setPlaceholderText("")
        self.view_username_txt.setClearButtonEnabled(False)
        self.view_username_txt.setObjectName("view_username_txt")
        self.view_password_txt = QtWidgets.QLineEdit(self)
        self.view_password_txt.setGeometry(QtCore.QRect(270, 290, 261, 51))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(12)
        self.view_password_txt.setFont(font)
        self.view_password_txt.setStyleSheet("border-radius:25px;color: rgb(139, 139, 139);letter-spacing:2px;")
        self.view_password_txt.setInputMethodHints(QtCore.Qt.ImhNone)
        self.view_password_txt.setInputMask("")
        self.view_password_txt.setText("")
        self.view_password_txt.setMaxLength(40)
        self.view_password_txt.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.view_password_txt.setAlignment(QtCore.Qt.AlignCenter)
        self.view_password_txt.setReadOnly(True)
        self.view_password_txt.setPlaceholderText("")
        self.view_password_txt.setClearButtonEnabled(False)
        self.view_password_txt.setObjectName("view_password_txt")
        self.view_password = QtWidgets.QLabel(self)
        self.view_password.setGeometry(QtCore.QRect(280, 260, 234, 21))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(14)
        self.view_password.setFont(font)
        self.view_password.setStyleSheet("color: rgb(139, 139, 139);")
        self.view_password.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.view_password.setObjectName("view_password")
        self.view_username = QtWidgets.QLabel(self)
        self.view_username.setGeometry(QtCore.QRect(280, 160, 234, 21))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(14)
        self.view_username.setFont(font)
        self.view_username.setStyleSheet("color: rgb(139, 139, 139);")
        self.view_username.setAlignment(QtCore.Qt.AlignLeading|QtCore.Qt.AlignLeft|QtCore.Qt.AlignVCenter)
        self.view_username.setObjectName("view_username")
        self.view_secret = QtWidgets.QLineEdit(self)
        self.view_secret.setGeometry(QtCore.QRect(216, 80, 261, 51))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(12)
        self.view_secret.setFont(font)
        self.view_secret.setStyleSheet("border-radius:25px;color: rgb(139, 139, 139);letter-spacing:2px;")
        self.view_secret.setInputMethodHints(QtCore.Qt.ImhNone)
        self.view_secret.setInputMask("")
        self.view_secret.setText("")
        self.view_secret.setMaxLength(40)
        self.view_secret.setEchoMode(QtWidgets.QLineEdit.Normal)
        self.view_secret.setAlignment(QtCore.Qt.AlignCenter)
        self.view_secret.setClearButtonEnabled(False)
        self.view_secret.setObjectName("view_secret")
        self.view_find = QtWidgets.QPushButton(self)
        self.view_find.setGeometry(QtCore.QRect(483, 80, 91, 51))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.view_find.setFont(font)
        self.view_find.setStyleSheet("QPushButton{    background-color: rgb(23, 215, 160);    color: rgb(255, 255, 255);    border-radius:25px;}QPushButton:hover{    background-color: rgb(255, 255, 255);    color: rgb(23, 215, 160);}")
        self.view_find.setObjectName("view_find")
        self.view_find1 = QtWidgets.QPushButton(self)
        self.view_find1.setGeometry(QtCore.QRect(285, 360, 234, 31))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(14)
        font.setBold(False)
        font.setWeight(50)
        self.view_find1.setFont(font)
        self.view_find1.setStyleSheet("QPushButton{    background-color: rgb(255, 154, 154);    color: rgb(255, 255, 255);    border-radius:10px;}QPushButton:hover{    background-color: rgb(220,20,60);}")
        self.view_find1.setObjectName("view_find1")
        self.view_find1.setText("Delete")
        self.view_find1.setFocusPolicy(QtCore.Qt.NoFocus)
        self.view_find1.clicked.connect(self.del_sec)
        self.view_find1.hide()
        self.view_find.clicked.connect(self.find_)
        self.view_password.setText("Password")
        self.view_username.setText("Username/Email")
        self.view_secret.setPlaceholderText("Secret")
        self.view_find.setText("Find")
        self.about_dev = QtWidgets.QLabel(self)
        self.about_dev.setGeometry(QtCore.QRect(210, 330, 371, 80))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(12)
        self.about_dev.setFont(font)
        self.about_dev.setStyleSheet("color: rgb(139, 139, 139);")
        self.about_dev.setAlignment(QtCore.Qt.AlignCenter)
        self.about_dev.setObjectName("about_dev")
        self.about_txt = QtWidgets.QLabel(self)
        self.about_txt.setGeometry(QtCore.QRect(210, 80, 371, 231))
        font = QtGui.QFont()
        font.setFamily("Varela Round")
        font.setPointSize(12)
        self.about_txt.setFont(font)
        self.about_txt.setStyleSheet("color: rgb(139, 139, 139);letter-spacing:2px;")
        self.about_txt.setAlignment(QtCore.Qt.AlignCenter)
        self.about_txt.setObjectName("about_txt")
        self.about_dev.setText("""Developed and maintained by
Dhruval Parmar""")
        self.about_txt.setText("""All we need in this world is privacy.
and privacy can't be compromised
that's why Maze-X is born.
To provide maximum privacy.
Records are encrypted with a
special encryption and 
stored in private server
locked with a random password
which even i can't access.""")

        # self.hide_register()
        self.R_create.setFocusPolicy(QtCore.Qt.NoFocus)
        self.pushButton.setFocusPolicy(QtCore.Qt.NoFocus)
        self.pushButton_2.setFocusPolicy(QtCore.Qt.NoFocus)
        self.L_enter.setFocusPolicy(QtCore.Qt.NoFocus)
        self.logout_btn.setFocusPolicy(QtCore.Qt.NoFocus)
        self.add_btn.setFocusPolicy(QtCore.Qt.NoFocus)
        self.view_btn.setFocusPolicy(QtCore.Qt.NoFocus)
        self.about_btn.setFocusPolicy(QtCore.Qt.NoFocus)
        self.add_save.setFocusPolicy(QtCore.Qt.NoFocus)
        self.view_find.setFocusPolicy(QtCore.Qt.NoFocus)
        self.about_btn.hide()
        self.user_lb.hide()
        self.line.hide()
        self.add_btn.hide()
        self.title.hide()
        self.view_btn.hide()
        self.logout_btn.hide()
        self.hide_login()
        self.hide_add()
        self.hide_view()
        self.hide_about()
        self.settingup()
        self.show()

    def settingup(self):
        try:
            get("https://www.google.com")
            self.connectdatabase()
        except:
            self.hide_register()
            self.R_to.show()       
            self.R_welcome.show()
            self.R_maze.show()
            self.R_maze.setText("Restart")
            self.R_welcome.setText("No")
            self.R_to.setText("Internet")   
            self.mark = 1    

    def closed(self):
        app.quit()

    def min(self):
        self.showMinimized()

    def mousePressEvent(self, event):
        self.oldPos = event.globalPos()

    def mouseMoveEvent(self, event):
        delta = QtCore.QPoint(event.globalPos() - self.oldPos)
        self.move(self.x() + delta.x(), self.y() + delta.y())
        self.oldPos = event.globalPos()

    def hide_register(self):
        self.R_welcome.hide()
        self.R_to.hide()
        self.R_maze.hide()
        self.R_warning.hide()
        self.R_warning1.hide()
        self.R_username.hide()
        self.R_password.hide()
        self.R_register.hide()
        self.R_create.hide()

    def show_register(self):
        self.R_welcome.show()
        self.R_to.show()
        self.R_warning1.show()
        self.R_maze.show()
        self.R_warning.show()
        self.R_username.show()
        self.R_password.show()
        self.R_register.show()
        self.R_create.show()

    def hide_login(self):
        self.L_warning.hide()
        self.L_welcome.hide()
        self.L_username.hide()
        self.L_warning.hide()
        self.L_enter.hide()
        self.L_password.hide()

    def show_login(self):
        self.L_warning.show()
        self.L_welcome.show()
        self.L_username.show()
        self.L_warning.show()
        self.L_enter.show()
        self.L_password.show()

    def hide_add(self):
        self.add_secret.hide()
        self.add_username.hide()
        self.add_password.hide()
        self.add_warning.hide()
        self.add_note.hide()
        self.add_save.hide()

    def show_add(self):
        self.add_secret.show()
        self.add_username.show()
        self.add_password.show()
        self.add_warning.show()
        self.add_warning.setText("")
        self.add_note.show()
        self.add_save.show()
        self.about_btn.show()
        self.user_lb.show()
        self.line.show()
        self.add_btn.show()
        self.title.show()
        self.view_btn.show()
        self.logout_btn.show()

    def hide_view(self):
        self.view_secret.hide()
        self.view_find.hide()
        self.view_username_txt.hide()
        self.view_username.hide()
        self.view_password_txt.hide()
        self.view_password.hide()
        self.view_find1.hide()

    def show_view(self):
        self.view_secret.show()
        self.view_secret.setText("")
        self.view_find.show()

    def hide_about(self):
        self.about_txt.hide()
        self.about_dev.hide()

    def show_about(self):
        self.about_txt.show()
        self.about_dev.show()

    def add_cl(self):
        self.add_btn.setStyleSheet("QPushButton{    background-color: rgb(23, 215, 160);    color: rgb(255, 255, 255);    border-radius:0px;}")
        self.view_btn.setStyleSheet("QPushButton{    background-color: transparent;    color: #8b8b8b;    border-radius:0px;}")
        self.about_btn.setStyleSheet("QPushButton{    background-color: transparent;    color: #8b8b8b;    border-radius:0px;}")
        self.show_add()
        self.hide_view()
        self.hide_about()
        self.title.setText("Add Record")

    def view_cl(self):
        self.view_btn.setStyleSheet("QPushButton{    background-color: rgb(23, 215, 160);    color: rgb(255, 255, 255);    border-radius:0px;}")
        self.add_btn.setStyleSheet("QPushButton{    background-color: transparent;    color: #8b8b8b;    border-radius:0px;}")
        self.about_btn.setStyleSheet("QPushButton{    background-color: transparent;    color: #8b8b8b;    border-radius:0px;}")
        self.hide_add()
        self.show_view()
        self.hide_about()
        self.title.setText("View Record")

    def about_cl(self):
        self.about_btn.setStyleSheet("QPushButton{    background-color: rgb(23, 215, 160);    color: rgb(255, 255, 255);    border-radius:0px;}")
        self.view_btn.setStyleSheet("QPushButton{    background-color: transparent;    color: #8b8b8b;    border-radius:0px;}")
        self.add_btn.setStyleSheet("QPushButton{    background-color: transparent;    color: #8b8b8b;    border-radius:0px;}")
        self.hide_add()
        self.hide_view()
        self.show_about()
        self.title.setText("About")


    def connectdatabase(self):
        myclient = MC() # MongoDB Connection String
        self.mydb = myclient[] #Database
        self.mycol = self.mydb[] #Collection

    def create_(self):
        if self.R_username.text() == "" and self.R_password.text() == "":
            self.hide_register()
            self.show_login()
        else:
            if self.R_username.text() != "":
                if self.R_password.text() != "":
                    if len(self.R_username.text()) <= 10 and len(self.R_password.text()) <= 20:
                        if self.mycol.find_one({'_id': self.R_username.text()}) == None:
                            dox = {"_id":self.R_username.text(),"Password":self.R_password.text()}
                            x = self.mycol.insert_one(dox)
                            self.R_warning.setText("Success")
                            self.hide_register()
                            self.show_login()
                        else:
                            self.R_warning.setText("Username taken")
                    else:
                        self.R_warning.setText("max length 10")
                else:
                    self.R_warning.setText("can't be empty")
            else:
                self.R_warning.setText("can't be empty")

    def enter_(self):
        if self.L_username.text() != "":
            x = self.mycol.find_one({'_id': self.L_username.text()})
            if x != None:
                if self.L_password.text() == x["Password"]:
                    self.L_warning.setText("Success")
                    self.hide_login()
                    self.hide_about()
                    self.hide_view()
                    self.add_cl()
                    self.show_add()
                    self.user_lb.setText(self.L_username.text())
                    self.current_id = self.L_username.text()
                else:
                    self.L_warning.setText("Incorrect password")
            else:
                self.L_warning.setText("user not exits")
        else:
            pass

    def save_(self):
        u = self.add_username.text()
        p = self.add_password.text()
        s = self.add_secret.text()
        if s != "":
            if u != "":
                if p != "":
                    self.add_chkk()
                else:
                    self.add_warning.setText("Password can't be null")
            else:
                self.add_warning.setText("Username can't be null")
        else:
            self.add_warning.setText("Secret can't be null")

    def add_chkk(self):
        u = self.add_username.text()
        p = self.add_password.text()
        s = self.add_secret.text()
        if u.find(" ") == -1:
            if p.find(" ") == -1:
                if s.find(" ") == -1:
                    v = self.mycol.find_one({'_id': self.current_id})
                    try:
                        a = v[s]
                        self.add_warning.setText("Secret Already exits")
                    except:
                        x = u+" "+p
                        x = x.encode('utf-8')
                        x = x.hex()
                        myquery = { "_id": self.current_id }
                        newvalues = { "$set": { s: x } }
                        self.mycol.update_one(myquery, newvalues)
                        self.add_username.setText("")
                        self.add_password.setText("")
                        self.add_secret.setText("")
                        self.add_warning.setText("Saved")
                else:
                    self.add_warning.setText("space not allowed")
            else:
                self.add_warning.setText("space not allowed")
        else:
            self.add_warning.setText("space not allowed")

    def find_(self):
        if self.view_secret.text() != "":
            try:
                self.current_sec = self.view_secret.text()
                v = self.mycol.find_one({'_id': self.current_id})
                x = bytes.fromhex(v[self.view_secret.text()])
                x = x.decode('utf-8')
                x = x.split()
                self.view_username_txt.setText(x[0])
                self.view_password_txt.setText(x[1])
                self.view_username.setText("Username")
                self.view_username.show()
                self.view_password.show()
                self.view_username_txt.show()
                self.view_password_txt.show()
                self.view_find1.show()
            except:
                self.view_username.show()
                self.view_username.setText("Not Available")

    def del_sec(self):
        try:
            user = self.current_id
            sec = self.current_sec
            self.mycol.update_one({ '_id': user }, { '$unset' : { sec : 1}})
            self.view_username.setText("Deleted")
            self.view_password.hide()
            self.view_username_txt.hide()
            self.view_password_txt.hide()
            self.view_find1.hide()
        except:
            pass

    def logout_(self):
        self.hide_add()
        self.hide_view()
        self.hide_about()
        self.about_btn.hide()
        self.user_lb.hide()
        self.line.hide()
        self.add_btn.hide()
        self.title.hide()
        self.view_btn.hide()
        self.logout_btn.hide()
        self.L_warning.setText("")
        self.L_username.setText("")
        self.L_password.setText("")
        self.show_login()

    def resource_path(self,relative_path):
        try:
            base_path = sys._MEIPASS
        except Exception:
            base_path = path.abspath(".")
        return path.join(base_path, relative_path)

if __name__ == "__main__":
    import sys
    app = QtWidgets.QApplication(sys.argv)
    ex = Maze()
    sys.exit(app.exec_())
